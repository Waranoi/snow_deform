#version 450 core
out vec4 frag_color;

in vec3 norm;
in vec3 frag_pos;

uniform vec3 light_col;
uniform vec3 light_pos;
uniform vec3 object_col;
uniform vec3 view_pos;

void main()
{
    float ambient_str = 0.1;
    vec3 ambient = ambient_str * light_col;

    vec3 norm_n = normalize(norm);
    vec3 light_dir = normalize(light_pos - frag_pos);

    float diff = max(dot(norm_n, light_dir), 0.0);
    vec3 diffuse = diff * light_col;

    float specular_strength = 0.5;
    vec3 view_dir = normalize(view_pos - frag_pos);
    vec3 reflect_dir = reflect(-light_dir, norm_n);

    float spec = pow(max(dot(view_dir, reflect_dir), 0.0), 32);
    vec3 specular = specular_strength * spec * light_col;  

    vec3 result = (ambient + diffuse + specular) * object_col;   
    frag_color = vec4(result, 1.0);
}